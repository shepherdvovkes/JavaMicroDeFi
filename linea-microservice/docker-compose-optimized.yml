version: '3.8'

services:
  # MongoDB - Primary Database for Blockchain Data
  mongodb:
    image: mongo:7.0
    container_name: linea-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: linea_blockchain
    volumes:
      - mongodb_data:/data/db
      - ./mongodb/init:/docker-entrypoint-initdb.d
    command: mongod --auth --bind_ip_all
    networks:
      - linea-network

  # TimescaleDB - Time-Series Database for Metrics
  timescaledb:
    image: timescale/timescaledb:latest-pg15
    container_name: linea-timescaledb
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: linea_metrics
      POSTGRES_USER: linea_user
      POSTGRES_PASSWORD: linea_password
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
      - ./timescaledb/init:/docker-entrypoint-initdb.d
    networks:
      - linea-network

  # Redis - Cache and Real-time Data
  redis:
    image: redis:7.2-alpine
    container_name: linea-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 2gb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - linea-network

  # Linea Microservice
  linea-microservice:
    build: .
    container_name: linea-microservice
    restart: unless-stopped
    ports:
      - "8008:8008"
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - JAVA_OPTS=--enable-preview -XX:+UseZGC -XX:+UnlockExperimentalVMOptions -XX:+UseTransparentHugePages -Xmx4g -Xms2g
      - SPRING_DATA_MONGODB_URI=mongodb://admin:admin123@mongodb:27017/linea_blockchain?authSource=admin
      - SPRING_DATASOURCE_URL=jdbc:postgresql://timescaledb:5432/linea_metrics
      - SPRING_DATASOURCE_USERNAME=linea_user
      - SPRING_DATASOURCE_PASSWORD=linea_password
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
    volumes:
      - /mnt/sata18tb:/mnt/sata18tb
    depends_on:
      - mongodb
      - timescaledb
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8008/api/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - linea-network

  # MongoDB Express - Database Admin UI
  mongo-express:
    image: mongo-express:1.0.0
    container_name: linea-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin123
      ME_CONFIG_MONGODB_URL: mongodb://admin:admin123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      - mongodb
    networks:
      - linea-network

  # pgAdmin - PostgreSQL Admin UI
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: linea-pgadmin
    restart: unless-stopped
    ports:
      - "8082:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@linea.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    depends_on:
      - timescaledb
    networks:
      - linea-network

  # Redis Commander - Redis Admin UI
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: linea-redis-commander
    restart: unless-stopped
    ports:
      - "8083:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
    depends_on:
      - redis
    networks:
      - linea-network

  # Prometheus - Metrics Collection
  prometheus:
    image: prom/prometheus:latest
    container_name: linea-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - linea-network

  # Grafana - Metrics Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: linea-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    networks:
      - linea-network

volumes:
  mongodb_data:
    driver: local
  timescaledb_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  linea-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
