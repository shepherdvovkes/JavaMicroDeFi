events {
    worker_connections 1024;
}

http {
    upstream erigon_rpc {
        server erigon:8545;
    }
    
    upstream erigon_ws {
        server erigon:8546;
    }
    
    upstream lighthouse_api {
        server lighthouse:5052;
    }
    
    upstream prometheus {
        server prometheus:9090;
    }
    
    upstream grafana {
        server grafana:3000;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=rpc:10m rate=5r/s;

    # ERIGON HTTP RPC
    server {
        listen 80;
        server_name rpc.ethereum.local;
        
        location / {
            limit_req zone=rpc burst=20 nodelay;
            proxy_pass http://erigon_rpc;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
    }

    # ERIGON WebSocket
    server {
        listen 80;
        server_name ws.ethereum.local;
        
        location / {
            proxy_pass http://erigon_ws;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Lighthouse API
    server {
        listen 80;
        server_name beacon.ethereum.local;
        
        location / {
            limit_req zone=api burst=10 nodelay;
            proxy_pass http://lighthouse_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Prometheus Metrics
    server {
        listen 80;
        server_name metrics.ethereum.local;
        
        location / {
            proxy_pass http://prometheus;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Grafana Dashboard
    server {
        listen 80;
        server_name dashboard.ethereum.local;
        
        location / {
            proxy_pass http://grafana;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Health Check Endpoint
    server {
        listen 80;
        server_name health.ethereum.local;
        
        location / {
            return 200 '{"status":"healthy","timestamp":"$time_iso8601"}';
            add_header Content-Type application/json;
        }
    }
}
