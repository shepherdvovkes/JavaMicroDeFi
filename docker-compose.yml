version: '3.8'

services:
  # Apache Kafka Infrastructure
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - defimon-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - defimon-network

  # MongoDB for chain data storage
  mongodb:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: defimon123
      MONGO_INITDB_DATABASE: chaindata
    volumes:
      - mongodb_data:/data/db
      - ./mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - defimon-network

  # API Gateway (Spring Cloud Gateway)
  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    depends_on:
      - kafka
    networks:
      - defimon-network

  # Blockchain Synchronization Service (Rust)
  blockchain-sync:
    build: ./blockchain-sync-service
    container_name: blockchain-sync
    environment:
      - KAFKA_BROKERS=kafka:29092
      - MONGODB_URI=mongodb://admin:defimon123@mongodb:27017/chaindata?authSource=admin
      - RUST_LOG=info
    depends_on:
      - kafka
      - mongodb
    networks:
      - defimon-network

  # Transaction Signing Service (Rust)
  transaction-signing:
    build: ./transaction-signing-service
    container_name: transaction-signing
    environment:
      - KAFKA_BROKERS=kafka:29092
      - RUST_LOG=info
    depends_on:
      - kafka
    networks:
      - defimon-network

  # Math Computing Service (Rust)
  math-computing:
    build: ./math-computing-service
    container_name: math-computing
    environment:
      - KAFKA_BROKERS=kafka:29092
      - RUST_LOG=info
    depends_on:
      - kafka
    networks:
      - defimon-network

  # Data Aggregation Service (Rust)
  data-aggregation:
    build: ./data-aggregation-service
    container_name: data-aggregation
    environment:
      - KAFKA_BROKERS=kafka:29092
      - MONGODB_URI=mongodb://admin:defimon123@mongodb:27017/chaindata?authSource=admin
      - RUST_LOG=info
    depends_on:
      - kafka
      - mongodb
    networks:
      - defimon-network

volumes:
  mongodb_data:

networks:
  defimon-network:
    driver: bridge
